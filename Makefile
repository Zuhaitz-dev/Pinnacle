# Project Makefile for Assembler and Simulator

# =========================
# Configuration
# =========================
CC        = gcc
CFLAGS    = -Wall -Wextra -std=c99
LDFLAGS   =
INC_DIR   = include
BIN_DIR   = bin

# Source files
ASSEMBLER_SRC  = assembler/assembler.c
SIMULATOR_SRC  = simulator/simulator.c

# Output binaries
ASSEMBLER_BIN  = $(BIN_DIR)/assembler
SIMULATOR_BIN  = $(BIN_DIR)/simulator

# =========================
# Default Target: standard build
# =========================
.PHONY: all
all: $(BIN_DIR) $(ASSEMBLER_BIN) $(SIMULATOR_BIN)
	@echo "**Build Complete (Standard)**"

# =========================
# Release build (optimized)
# =========================
.PHONY: release
release: CFLAGS += -DNO_LOG -O3 -march=native -flto -funroll-loops -pipe
release: $(BIN_DIR) $(ASSEMBLER_BIN) $(SIMULATOR_BIN)
	@echo "**Build Complete (Release mode)**"

# =========================
# Benchmark build (timed)
# =========================
.PHONY: benchmark
benchmark: CFLAGS += \
	-DBENCHMARK -DHIDE_TRACE \
	-O3 -march=native -mtune=native \
	-flto -funroll-loops -fomit-frame-pointer \
	-fno-stack-protector -pipe
benchmark: $(BIN_DIR) $(ASSEMBLER_BIN) $(SIMULATOR_BIN)
	@echo "**Build Complete (Benchmark mode)**"

# =========================
# Debug build (no optimization, debug info)
# =========================
.PHONY: debug
debug: CFLAGS += -g -O0
debug: $(BIN_DIR) $(ASSEMBLER_BIN) $(SIMULATOR_BIN)
	@echo "**Build Complete (Debug mode)**"

# =========================
# Create the bin directory if it doesn't exist
# =========================
$(BIN_DIR):
	@mkdir -p $(BIN_DIR)

# =========================
# Assembler Compilation
# =========================
$(ASSEMBLER_BIN): $(ASSEMBLER_SRC) $(INC_DIR)/assembler_defs.h $(INC_DIR)/isa_defs.h
	$(CC) $(CFLAGS) -I$(INC_DIR) $< -o $@ $(LDFLAGS)
	@echo "Built $(ASSEMBLER_BIN)"

# =========================
# Simulator Compilation
# =========================
$(SIMULATOR_BIN): $(SIMULATOR_SRC) $(INC_DIR)/isa_defs.h
	$(CC) $(CFLAGS) -I$(INC_DIR) $< -o $@ $(LDFLAGS)
	@echo "Built $(SIMULATOR_BIN)"

# =========================
# Clean target
# =========================
.PHONY: clean
clean:
	@echo "Cleaning project..."
	@rm -rf $(BIN_DIR)
	@rm -f a.out.bin # Remove the output file generated by the assembler
	@echo "Clean complete."

# =========================
# Usage notes:
# make all        # Standard build
# make release    # Optimized release build
# make benchmark  # Optimized + timing instrumentation
# make debug      # Debug build with symbols, no optimization
# make clean      # Remove binaries and output files
# =========================
