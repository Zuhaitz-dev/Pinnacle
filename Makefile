# Project Makefile for Assembler and Simulator

# **Configuration**
CC = gcc
CFLAGS = -Wall -Wextra -std=c99 -g
LDFLAGS = 
INC_DIR = include
BIN_DIR = bin
# Define the source files for each program
ASSEMBLER_SRC = assembler/assembler.c
SIMULATOR_SRC = simulator/simulator.c

# **Targets**
ASSEMBLER_BIN = $(BIN_DIR)/assembler
SIMULATOR_BIN = $(BIN_DIR)/simulator

# Default target: builds all non-debug binaries
.PHONY: all
all: $(BIN_DIR) $(ASSEMBLER_BIN) $(SIMULATOR_BIN)
	@echo "**Build Complete (Standard)**"

# Target for debug build: defines DEBUG_MODE macro
.PHONY: debug
debug: CFLAGS += -DDEBUG_MODE
debug: $(BIN_DIR) $(ASSEMBLER_BIN) $(SIMULATOR_BIN)
	@echo "**Build Complete (DEBUG_MODE enabled)**"

# Create the bin directory if it doesn't exist
$(BIN_DIR):
	@mkdir -p $(BIN_DIR)

# **Assembler Compilation**
$(ASSEMBLER_BIN): $(ASSEMBLER_SRC) $(INC_DIR)/assembler_defs.h $(INC_DIR)/isa_defs.h
	$(CC) $(CFLAGS) -I$(INC_DIR) $< -o $@ $(LDFLAGS)
	@echo "Built $(ASSEMBLER_BIN)"

# *Simulator Compilation**
$(SIMULATOR_BIN): $(SIMULATOR_SRC) $(INC_DIR)/isa_defs.h
	$(CC) $(CFLAGS) -I$(INC_DIR) $< -o $@ $(LDFLAGS)
	@echo "Built $(SIMULATOR_BIN)"

# **Clean Target**
.PHONY: clean
clean:
	@echo "Cleaning project..."
	@rm -rf $(BIN_DIR)
	@rm -f a.out.bin # Remove the output file generated by the assembler
	@echo "Clean complete."

# To use:
# make all    # for a standard build
# make debug  # for a debug build
# make clean  # to remove binaries and output files
